name: CI/CD

on: [push]

jobs:
  main:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: checkout setup
        uses: actions/setup-node@v2

      - name: cache deps
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: install deps
        run: npm ci

      - name: check typescript
        run: npm run tsc

      - name: check lint
        run: npm run lint
  vercel:
    name: deploy
    runs-on: ubuntu-latest
    needs: main

    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: checkout setup
        uses: actions/setup-node@v1

      - name: deploy to vercel
        run: |
          prodRun=""
          if [[ ${GITHUB_REF} == "refs/heads/main" ]]; then
            prodRun="--prod"
          fi

          npx vercel --token ${VERCEL_TOKEN} $prodRun \ 
            -m githubCommitSha=${{ github.sha }} \ 
            -m githubCommitAuthor=${{ github.actor }} \
            -m githubCommitAuthorLogin=${{ github.actor }} \
            -m githubDeployment=1 \
            -m githubCommitRef=${{ github.ref_name }} \
            -m githubRepo=${{ github.repository }} \
            -m githubOrg=${{ github.repository_owner }} \
            -m githubCommitOrg=${{ github.repository_owner }} \
            -m githubCommitRepo=${{ github.repository }} \
            -m githubCommitMessage="${{ github.event.head_commit.message }}"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
